#!/usr/bin/env python
#
# This script helps at the generation or correction of groundtruths.
#
# Usage: python missing_incorrect_files.py <pickle_filename>
#				where <pickle_filename> has been generated by '0_check_data.py'.
# e.g. python missing_incorrect_files.py 201809192209_incorrect_lesion.pkl
#
# Charley Gros 2018-09-18
# Modified: 2018-10-01

import os
import sys
import pickle
import sct_utils as sct


def _visualize_incorrect_segmentation(lst):
	'''Open incorrect segmentations with FSLeyes.'''
	stg = '\n\nIncorrect files: ' + str(len(lst)) + '\n\n'
	stg += 'Please correct the segmentations and save them as *_lesion_manual.nii.gz for the lesion segmentation.'
	stg += '\n'
	print stg
	for l in lst:
		print os.path.dirname(l) + '\n'
		fname_img = os.path.dirname(l) + '/' + l.split('/')[-2] + '.nii.gz'
		os.system(' '.join(['fsleyes', fname_img, l, '-cm Red']))


def _display_missing_files(dct):
	'''Print the missing files in the terminal.'''
	stg = '\n\nMissing files: ' + str(len(dct[dct.keys()[0]])) + '\n\n' + '\n'.join(dct[dct.keys()[0]])
	print stg


def run_main(fname_pickle):
	dct = pickle.load(open(fname_pickle,"rb"))

	if dct.keys()[0] in ['incorrect_lesion']:
		_visualize_incorrect_segmentation(dct[dct.keys()[0]])
	else:
		_display_missing_files(dct)


if __name__ == '__main__':
	path_pickle = sys.argv[1]
	run_main(path_pickle)
